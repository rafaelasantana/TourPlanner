@page "/tour/details/{TourId}"
@using TourPlanner.Services
@using TourPlanner.ViewModels.TourViewModels
@using TourPlanner.Components.Pages.TourLogPages
@inject TourService TourService
@inject TimeFormatService TimeFormatService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer


<PageTitle>Tour Details</PageTitle>

<CustomBodyContainerWide>
    <div class="row">
        <div class="col-12 col-lg-6">
            <CustomBodyWrapperRounded>
                <div class="row">
                    <div class="row pe-0 ">
                        <div class="col-4">
                            <p class="fs-3 ps-2">Tour Details</p>
                        </div>
                        <div class="col float-end text-end pe-1">
                            <a href="/tour/report/@TourId" class="btn btn-outline-secondary" style="width: 10rem; border-radius: 1rem; margin-right: 0.2rem">
                                <i class="bi bi-file-earmark-pdf"></i> Create Report
                            </a>
                            <a href="/tour/manage/@TourId" class="btn btn-outline-secondary" style="width: 7rem; border-radius: 1rem; margin-right: 0.2rem">
                                <i class="bi bi-download"></i> Export
                            </a>
                            <CustomEditButtonRoundedPill Url="@_viewModel.EditUrl" ButtonText="Edit"/>
                        </div>
                    </div>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Name" CardText="@_viewModel.Tour.Name"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Distance (Meters)" CardText="@_viewModel.Tour.DistanceMeters.ToString()"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Start" CardText="@_viewModel.Tour.Start"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="End" CardText="@_viewModel.Tour.End"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Transport Type" CardText="@_viewModel.Tour.TransportType.ToString()"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Estimated Time" CardText="@_viewModel.EstimatedTimeFormatted"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Popularity" CardText="@_viewModel.PopularityFormatted"/>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Child Friendliness" CardText="@_viewModel.ChildFriendlinessFormatted"/>
                    </CustomWrapperSmall>
                    <CustomWrapperLarge>
                        <CustomDetailCard CardLabel="Description" CardText="@_viewModel.Tour.Description"/>
                    </CustomWrapperLarge>
                </div>
                
            </CustomBodyWrapperRounded>
        </div>
        <div class="col-12 col-lg-6">
            <CustomBodyWrapperRounded>
                <div class="row justify-content-center ms-1">
                    <p class="fs-3 p-0">Map</p>
                    <div class="me-3" style="background-color: white; border-radius: 1rem; height: 30rem; display: flex; align-items: center; justify-content: center;">
                        <img src="Images/map-placeholder.png" alt="Map Placeholder" style="border-radius: 1rem; width: 100%; height: 100%;">
                    </div>
                </div>
            </CustomBodyWrapperRounded>
        </div>
    </div>
</CustomBodyContainerWide>
<CustomBodyContainerWide>
    <TourLogList TourId="@TourId"></TourLogList>
</CustomBodyContainerWide>


@code {
    
    [Parameter]
    public string? TourId { get; set; }

    private TourDetailsViewModel _viewModel = null!;
    
    protected override async Task OnInitializedAsync()
    {
        _viewModel = new TourDetailsViewModel(TourService, TimeFormatService, NavigationManager)
        {
            TourId = TourId
        };
        await _viewModel.InitializeAsync();
    }
}