@page "/tour/details/{TourId}"
@using TourPlanner.Services
@using TourPlanner.ViewModels.TourViewModels
@using TourPlanner.Components.Pages.TourLogPages
@inject TourService TourService
@inject TimeFormatService TimeFormatService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer


<PageTitle>Tour Details</PageTitle>

<CustomBodyContainerWide>
    <div class="row" >
        <div class="col-12 col-xl-6">
            <CustomBodyWrapperRounded>
                <div class="row" style="height: 100%;">
                    <div class="row pe-0 ">
                        <div class="col-12 col-xl-4">
                            <p class="fs-3 ps-2">Tour Details</p>
                        </div>
                        <div class="col float-end text-end pe-1">
                            <a href="/tour/report/@TourId" class="btn btn-outline-secondary" style="width: 10rem; border-radius: 1rem; margin-right: 0.2rem">
                                <i class="bi bi-file-earmark-pdf" style="margin-right: 0.4rem"></i>Create Report
                            </a>
                            <a href="/tour/manage/@TourId" class="btn btn-outline-secondary" style="width: 7rem; border-radius: 1rem; margin-right: 0.2rem">
                                <i class="bi bi-download" style="margin-right: 0.6rem"></i>Export
                            </a>
                            <CustomEditButtonRoundedPill Url="@_viewModel.EditUrl" ButtonText=" Edit"/>
                        </div>
                    </div>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Name" CardText="@_viewModel.Tour.Name"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Distance (Meters)" CardText="@_viewModel.Tour.DistanceMeters.ToString()"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Start" CardText="@_viewModel.Tour.Start"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="End" CardText="@_viewModel.Tour.End"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Transport Type" CardText="@_viewModel.Tour.TransportType.ToString()"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Estimated Time" CardText="@_viewModel.EstimatedTimeFormatted"></CustomDetailCard>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Popularity" CardText="@_viewModel.PopularityFormatted"/>
                    </CustomWrapperSmall>
                    <CustomWrapperSmall>
                        <CustomDetailCard CardLabel="Child Friendliness" CardText="@_viewModel.ChildFriendlinessFormatted"/>
                    </CustomWrapperSmall>
                    <CustomWrapperLarge>
                        <CustomDetailCard CardLabel="Description" CardText="@_viewModel.Tour.Description"/>
                    </CustomWrapperLarge>
                </div>

            </CustomBodyWrapperRounded>
        </div>
        <div class="col-12 col-xl-6">
            <CustomBodyWrapperRounded>
                <div class="row justify-content-center ms-1">
                    <p class="fs-3 p-0">Map</p>
                    <div class="me-3" style="background-color: white; border-radius: 1rem; height: 33rem; display: flex; align-items: center; justify-content: center;">
                        <div id="map" style="height: 100%; width: 100%;" @ref="map"></div>
                    </div>
                </div>
            </CustomBodyWrapperRounded>
        </div>
    </div>
</CustomBodyContainerWide>
<CustomBodyContainerWide>
    <TourLogList TourId="@TourId"></TourLogList>
</CustomBodyContainerWide>

@code {

    [Parameter]
    public string? TourId { get; set; }

    private ElementReference map;

    private TourDetailsViewModel _viewModel = null!;

    protected override async Task OnInitializedAsync()
    {
        _viewModel = new TourDetailsViewModel(TourService, TimeFormatService, NavigationManager)
                     {
                         TourId = TourId
                     };
        await _viewModel.InitializeAsync();
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        await JSRuntime.InvokeVoidAsync("initializeMap", map, _viewModel.Tour.StartCoordinates.Latitude, _viewModel.Tour.StartCoordinates.Longitude, _viewModel.Tour.EndCoordinates.Latitude, _viewModel.Tour.EndCoordinates.Longitude, _viewModel.Tour.RouteGeometry);
    }

}